// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ping struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Pong struct {
	Val                  int64    `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetVal() int64 {
	if m != nil {
		return m.Val
	}
	return 0
}

func (m *Pong) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Ping)(nil), "pb.Ping")
	proto.RegisterType((*Pong)(nil), "pb.Pong")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 126 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x92, 0xe0, 0x62,
	0x09, 0xc8, 0xcc, 0x4b, 0x17, 0x12, 0xe0, 0x62, 0xce, 0x2d, 0x4e, 0x97, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x02, 0x31, 0x95, 0xb4, 0xb8, 0x58, 0x02, 0xf2, 0x21, 0x32, 0x65, 0x89, 0x39, 0x60,
	0x19, 0xe6, 0x20, 0x10, 0x13, 0xa6, 0x96, 0x09, 0xae, 0xd6, 0x48, 0x93, 0x8b, 0xd3, 0x37, 0xdf,
	0x3d, 0xb1, 0x24, 0xb5, 0x3c, 0xb1, 0x52, 0x48, 0x86, 0x8b, 0xcd, 0x25, 0x1f, 0x6c, 0x28, 0x87,
	0x5e, 0x41, 0x92, 0x1e, 0x88, 0x25, 0x05, 0x61, 0xe5, 0xe7, 0xa5, 0x27, 0xb1, 0x81, 0xed, 0x36,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xcf, 0x1d, 0x2b, 0x8b, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MoGatewayClient is the client API for MoGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoGatewayClient interface {
	DoPing(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error)
}

type moGatewayClient struct {
	cc *grpc.ClientConn
}

func NewMoGatewayClient(cc *grpc.ClientConn) MoGatewayClient {
	return &moGatewayClient{cc}
}

func (c *moGatewayClient) DoPing(ctx context.Context, in *Ping, opts ...grpc.CallOption) (*Pong, error) {
	out := new(Pong)
	err := c.cc.Invoke(ctx, "/pb.MoGateway/DoPing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MoGatewayServer is the server API for MoGateway service.
type MoGatewayServer interface {
	DoPing(context.Context, *Ping) (*Pong, error)
}

func RegisterMoGatewayServer(s *grpc.Server, srv MoGatewayServer) {
	s.RegisterService(&_MoGateway_serviceDesc, srv)
}

func _MoGateway_DoPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Ping)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoGatewayServer).DoPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MoGateway/DoPing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoGatewayServer).DoPing(ctx, req.(*Ping))
	}
	return interceptor(ctx, in, info, handler)
}

var _MoGateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MoGateway",
	HandlerType: (*MoGatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoPing",
			Handler:    _MoGateway_DoPing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
